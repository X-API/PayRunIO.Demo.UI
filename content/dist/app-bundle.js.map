{"version":3,"sources":["src/welcome/welcome.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/welcome.html","src/welcome/setup.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/setup.html","src/resources/index.js","src/resources/elements/validation-errors/validation-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/validation-errors/validation-errors.html","src/resources/elements/router-progress-indicator/router-progress-indicator.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/router-progress-indicator/router-progress-indicator.html","src/resources/elements/coming-soon/coming-soon.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/coming-soon/coming-soon.html","src/main.js","src/header/header.js","/Users/robertwaggott/Code/Me/payrun-demo/src/header/header.html","src/footer/footer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/footer/footer.html","src/environment.js","src/employer/list.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/list.html","src/employer/employer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer.html","src/app.js","/Users/robertwaggott/Code/Me/payrun-demo/src/app.html","src/api-calls/api-calls.js","/Users/robertwaggott/Code/Me/payrun-demo/src/api-calls/api-calls.html"],"names":["Welcome","activate","client","HttpClient","get","then","state","JSON","parse","data","response","deactivate","Setup","ValidationControllerFactory","Router","controllerFactory","router","controller","createForCurrentScope","environments","setupValidationRules","ValidationRules","ensure","required","withMessage","on","save","Environment","ConsumerKey","ConsumerSecret","validate","result","valid","post","navigate","configure","config","ValidationErrors","bindable","RouterProgressIndicator","EventAggregator","ea","visible","attached","processingSubscriber","subscribe","NProgress","start","completeSubscriber","done","detached","dispose","ComingSoon","aurelia","use","standardConfiguration","plugin","feature","environment","debug","developmentLogging","testing","setRoot","Header","toggleAPICalls","publish","Footer","List","employers","console","log","Employer","employer","id","App","configureRouter","title","map","route","moduleId","PLATFORM","moduleName","APICalls","toggleAPICallsSubscriber","close"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from \"aurelia-http-client\";\n\nexport class Welcome {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/has-been-setup\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n\n    deactivate() {\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { Router } from \"aurelia-router\";\n\n@inject(ValidationControllerFactory, Router)\nexport class Setup {\n    constructor(controllerFactory, router) {\n        this.controller = controllerFactory.createForCurrentScope();\n        this.router = router;\n        this.client = new HttpClient();\n    }\n\n    activate() {\n        this.client.get(\"/api/setup\").then(data => {\n            this.state = JSON.parse(data.response);\n            this.environments = [\"Test\", \"Production\"];\n\n            this.setupValidationRules();\n        });\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"ConsumerSecret\").required().withMessage(\"Consumer Secret is required\")\n            .ensure(\"ConsumerKey\").required().withMessage(\"Consumer Key is required\")\n            .ensure(\"Environment\").required().withMessage(\"Environment is required\")\n            .on(this.state);\n    }\n\n    save() {\n        let data = {\n            Environment: this.state.Environment,\n            ConsumerKey: this.state.ConsumerKey,\n            ConsumerSecret: this.state.ConsumerSecret\n        };\n\n        this.controller.validate().then(result => {\n            if (result.valid) {\n                this.client.post(\"/api/setup\", data).then(() => {\n                    this.router.navigate(\"employers\");\n                });\n            }\n        });  \n    }    \n}",null,"export function configure(config) {\n  //config.globalResources([]);\n}\n","import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"validation-errors\")\nexport class ValidationErrors {\n    @bindable errors = null;\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"router-progress-indicator\")\n@inject(EventAggregator)\nexport class RouterProgressIndicator {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n        \n    attached() {\n        this.processingSubscriber = this.ea.subscribe(\"router:navigation:processing\", () => {\n            NProgress.start();\n        });\n\n        this.completeSubscriber = this.ea.subscribe(\"router:navigation:complete\", () => {\n            NProgress.done();\n        });        \n    }\n\n    detached() {\n        this.processingSubscriber.dispose();\n        this.completeSubscriber.dispose();\n    }\n}",null,"import { customElement } from \"aurelia-framework\";\n\n@customElement(\"coming-soon\")\nexport class ComingSoon {\n}",null,"import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin(\"aurelia-validation\")\n    .feature(\"resources\");\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  return aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@inject(EventAggregator)\nexport class Header {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n    }\n\n    attached() {\n    }\n\n    toggleAPICalls() {\n        this.ea.publish(\"toggleAPICalls\");\n    }\n}",null,"import { HttpClient } from \"aurelia-http-client\";\n\nexport class Footer {\n    attached() {\n        let client = new HttpClient();\n\n        client.get(\"/api/version\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n}",null,"export default {\n  debug: true,\n  testing: true\n};\n","import { HttpClient } from \"aurelia-http-client\";\n\nexport class List {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/employers\").then(data => {\n            this.employers = JSON.parse(data.response);\n\n            console.log(this.employers);\n        });\n    }\n}",null,"import { HttpClient } from \"aurelia-http-client\";\n\nexport class Employer {\n    constructor() {\n        this.employer = null;\n    }\n\n    activate(id) {\n        if (id) {\n            let client = new HttpClient();\n\n            client.get(`/api/employer/${id}`).then(data => {\n                this.employer = JSON.parse(data.response);\n            });\n        }\n    }\n}",null,"import { PLATFORM } from 'aurelia-pal';\n\nexport class App {\n\tconfigureRouter(config, router) {\n\t\tconfig.title = \"PayRun.io Demo\";\n\n\t\tconfig.map([\n\t\t\t{ \n\t\t\t\troute: \"\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"welcome/welcome\"),\n\t\t\t\ttitle: \"Get started\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"employers\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"employer/list\"),\n\t\t\t\ttitle: \"Employers\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"setup\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"welcome/setup\"),\n\t\t\t\ttitle: \"Setup\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"employer/:id?\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"employer/employer\"),\n\t\t\t\ttitle: \"Employer\" \n\t\t\t}\n\t\t]);\n\n    \tthis.router = router;\n\t}\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"api-calls\")\n@inject(EventAggregator)\nexport class APICalls {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n\n    attached() {\n        this.toggleAPICallsSubscriber = this.ea.subscribe(\"toggleAPICalls\", () => {\n            this.visible = !this.visible;\n        });\n    }\n\n    detached() {\n        this.toggleAPICallsSubscriber.dispose();\n    }\n\n    close() {\n        this.visible = false;\n    }\n}",null],"sourceRoot":"../.."}