{"version":3,"sources":["src/welcome/welcome.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/welcome.html","src/welcome/setup.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/setup.html","src/resources/value-converters/short-date.js","src/resources/value-converters/long-date-time.js","src/resources/value-converters/employee-name.js","src/resources/value-converters/bank-account.js","src/resources/value-converters/address.js","src/resources/index.js","src/resources/elements/validation-errors/validation-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/validation-errors/validation-errors.html","src/resources/elements/status/status.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/status/status.html","src/resources/elements/router-progress-indicator/router-progress-indicator.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/router-progress-indicator/router-progress-indicator.html","src/resources/elements/coming-soon/coming-soon.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/coming-soon/coming-soon.html","src/resources/elements/api-errors/api-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/api-errors/api-errors.html","src/pension/pension-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pension/pension-modal.html","src/pay-schedule/pay-schedule-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-schedule/pay-schedule-modal.html","src/main.js","src/header/header.js","/Users/robertwaggott/Code/Me/payrun-demo/src/header/header.html","src/footer/footer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/footer/footer.html","src/environment.js","src/employer/list.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/list.html","src/employer/employer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer.html","src/employer/employer-form.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer-form.html","src/dialogs/confirm.js","/Users/robertwaggott/Code/Me/payrun-demo/src/dialogs/confirm.html","src/app.js","/Users/robertwaggott/Code/Me/payrun-demo/src/app.html","src/api-calls/api-calls.js","/Users/robertwaggott/Code/Me/payrun-demo/src/api-calls/api-calls.html"],"names":["Welcome","activate","client","HttpClient","get","then","state","JSON","parse","data","response","deactivate","Setup","ValidationControllerFactory","Router","controllerFactory","router","controller","createForCurrentScope","environments","setupValidationRules","ValidationRules","ensure","required","withMessage","on","save","Environment","ConsumerKey","ConsumerSecret","validate","result","valid","post","navigate","moment","ShortDateValueConverter","toView","value","format","LongDateTimeValueConverter","EmployeeNameValueConverter","employee","firstname","FirstName","Initials","parts","Title","MiddleName","LastName","filter","part","undefined","trim","length","join","BankAccountValueConverter","account","AccountName","AccountNumber","SortCode","AddressValueConverter","address","Address1","Address2","Address3","Address4","Country","Postcode","configure","config","globalResources","ValidationErrors","bindable","Status","RouterProgressIndicator","EventAggregator","ea","visible","attached","processingSubscriber","subscribe","NProgress","start","completeSubscriber","done","detached","dispose","ComingSoon","ApiErrors","PensionModal","DialogController","dialogController","validationController","proRataMethods","text","taxationMethods","employerId","parsedResponse","res","errors","apiErrors","ok","status","PayScheduleModal","frequencies","Id","Key","Name","PayFrequency","aurelia","use","standardConfiguration","plugin","PLATFORM","moduleName","feature","environment","debug","developmentLogging","testing","setRoot","Header","toggleAPICalls","publish","Footer","List","employers","console","log","Employer","DialogService","eventAggregator","dialogService","employer","params","id","getEmployerDetails","Promise","resolve","canAddPayRun","context","Employees","PaySchedules","PaySchedulesTable","PaySchedule","addAPaySchedule","openPayScheduleModal","editPaySchedule","schedule","deletePaySchedule","opts","viewModel","Confirm","model","title","message","open","whenClosed","wasCancelled","stringify","output","addAPension","openPensionModal","editPension","pension","defaultPensionForAE","pensionId","patch","deletePension","delete","EmployerForm","yes","no","cancel","App","configureRouter","map","route","moduleId","APICalls","toggleAPICallsSubscriber","close"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from \"aurelia-http-client\";\n\nexport class Welcome {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/has-been-setup\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n\n    deactivate() {\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { Router } from \"aurelia-router\";\n\n@inject(ValidationControllerFactory, Router)\nexport class Setup {\n    constructor(controllerFactory, router) {\n        this.controller = controllerFactory.createForCurrentScope();\n        this.router = router;\n        this.client = new HttpClient();\n    }\n\n    activate() {\n        this.client.get(\"/api/setup\").then(data => {\n            this.state = JSON.parse(data.response);\n            this.environments = [\"Test\", \"Production\"];\n\n            this.setupValidationRules();\n        });\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"ConsumerSecret\").required().withMessage(\"Consumer Secret is required\")\n            .ensure(\"ConsumerKey\").required().withMessage(\"Consumer Key is required\")\n            .ensure(\"Environment\").required().withMessage(\"Environment is required\")\n            .on(this.state);\n    }\n\n    save() {\n        let data = {\n            Environment: this.state.Environment,\n            ConsumerKey: this.state.ConsumerKey,\n            ConsumerSecret: this.state.ConsumerSecret\n        };\n\n        this.controller.validate().then(result => {\n            if (result.valid) {\n                this.client.post(\"/api/setup\", data).then(() => {\n                    this.router.navigate(\"employers\");\n                });\n            }\n        });  \n    }    \n}",null,"const moment = require(\"moment\");\n\nexport class ShortDateValueConverter {\n\ttoView(value) {\n\t\tif (value) {\n\t\t\treturn moment(value).format(\"YYYY-MM-DD\");\n\t\t}\n\t\t\n\t\treturn \"\";\n  \t}\n}\n\n","const moment = require(\"moment\");\n\nexport class LongDateTimeValueConverter {\n\ttoView(value) {\n\t\tif (value) {\n\t\t\treturn moment(value).format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t}\n\t\t\n\t\treturn \"\";\n  \t}\n}\n\n","export class EmployeeNameValueConverter {\n\ttoView(employee) {\n\t\tlet firstname = employee.FirstName || employee.Initials;\n    \n\t\tlet parts = [\n\t\t\temployee.Title,\n\t\t\tfirstname,\n\t\t\temployee.MiddleName,\n\t\t\temployee.LastName\n\t\t].filter(part => part !== undefined && part !== null && part.trim().length > 0);\n\t\n\t\treturn parts.join(\" \");\t\t\n\t}\n}\n\n","export class BankAccountValueConverter {\n\ttoView(account) {\n\t\tif (account) {\n\t\t\tlet parts = [\n\t\t\t\taccount.AccountName,\n\t\t\t\taccount.AccountNumber,\n\t\t\t\taccount.SortCode\n\t\t\t].filter(part => part !== null && part !== undefined && part.trim().length > 0);\n\t\n\t\t\treturn parts.join(\"<br />\");\n\t\t}\n\t\n\t\treturn \"\";\n\t}\n}","export class AddressValueConverter {\n  \ttoView(address) {\n\t\tif (address) {\n\t\t\tlet parts = [\n\t\t\t\taddress.Address1, \n\t\t\t\taddress.Address2, \n\t\t\t\taddress.Address3, \n\t\t\t\taddress.Address4, \n\t\t\t\taddress.Country, \n\t\t\t\taddress.Postcode\n\t\t\t].filter(part => part !== null && part !== undefined && part.trim().length > 0);\n\t\n\t\t\treturn parts.join(\"<br />\");\n\t\t}\n\t\n\t\treturn \"\";\n  \t}\n}","export function configure(config) {\n\tconfig.globalResources([\n\t\t\"./value-converters/address\",\n\t\t\"./value-converters/bank-account\",\n\t\t\"./value-converters/employee-name\",\n\t\t\"./value-converters/long-date-time\",\n\t\t\"./value-converters/short-date\"\n  \t]);\n}\n","import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"validation-errors\")\nexport class ValidationErrors {\n    @bindable errors = null;\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"status\")\nexport class Status {\n    @bindable status = null;\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"router-progress-indicator\")\n@inject(EventAggregator)\nexport class RouterProgressIndicator {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n        \n    attached() {\n        this.processingSubscriber = this.ea.subscribe(\"router:navigation:processing\", () => {\n            NProgress.start();\n        });\n\n        this.completeSubscriber = this.ea.subscribe(\"router:navigation:complete\", () => {\n            NProgress.done();\n        });        \n    }\n\n    detached() {\n        this.processingSubscriber.dispose();\n        this.completeSubscriber.dispose();\n    }\n}",null,"import { customElement } from \"aurelia-framework\";\n\n@customElement(\"coming-soon\")\nexport class ComingSoon {\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"api-errors\")\nexport class ApiErrors {\n    @bindable errors = null;\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PensionModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        this.proRataMethods = [\n            { value: \"NotSet\", text: \"Not set\" },\n            { value: \"Annual260Days\", text: \"Annual 260 days\" },\n            { value: \"Annual365Days\", text: \"Annual 365 days\" },\n            { value: \"AnnualQualifyingDays\", text: \"Annual qualifying days\" },\n            { value: \"DaysPerCalenderMonth\", text: \"Days per calender month\" },\n            { value: \"DaysPerTaxPeriod\", text: \"Days per tax period\" },\n        ];\n\n        this.taxationMethods = [\n            { value: \"NotSet\", text: \"Not set\" },\n            { value: \"NetBased\", text: \"Net based\" },\n            { value: \"ReliefAtSource\", text: \"Relief at source\" }\n        ];\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"SchemeName\").required().withMessage(\"Scheme name is required\")\n            .ensure(\"ProviderName\").required().withMessage(\"Provider name is required\")\n            .ensure(\"ProviderEmployerRef\").required().withMessage(\"Provider employer ref is required\")\n            .ensure(\"EffectiveDate\").required().withMessage(\"Effective date is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/pension`, this.state).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PayScheduleModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n        this.frequencies = [\n            { text: \"Weekly\", value: \"Weekly\" },\n            { text: \"Monthly\", value: \"Monthly\" },\n            { text: \"Two weekly\", value: \"TwoWeekly\" },\n            { text: \"Four weekly\", value: \"FourWeekly\" }\n        ];\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"Name\").required().withMessage(\"Name is required\")\n            .ensure(\"PayFrequency\").required().withMessage(\"Pay Frequency is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        let data = {\n            Id: this.state.Key,\n            Name: this.state.Name,\n            PayFrequency: this.state.PayFrequency\n        };\n\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/paySchedule`, data).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n        });\n    }\n}",null,"import { PLATFORM } from \"aurelia-pal\";\nimport environment from './environment';\n\nexport function configure(aurelia) {\n\taurelia.use\n\t\t.standardConfiguration()\n\t\t.plugin(\"aurelia-validation\")\n\t\t.plugin(PLATFORM.moduleName(\"aurelia-dialog\"))\n\t\t.feature(\"resources\");\n\n\tif (environment.debug) {\n\t\taurelia.use.developmentLogging();\n\t}\n\n\tif (environment.testing) {\n\t\taurelia.use.plugin('aurelia-testing');\n\t}\n\n\treturn aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@inject(EventAggregator)\nexport class Header {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n    }\n\n    attached() {\n    }\n\n    toggleAPICalls() {\n        this.ea.publish(\"toggleAPICalls\");\n    }\n}",null,"import { HttpClient } from \"aurelia-http-client\";\n\nexport class Footer {\n    attached() {\n        let client = new HttpClient();\n\n        client.get(\"/api/version\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n}",null,"export default {\n  debug: true,\n  testing: true\n};\n","import { HttpClient } from \"aurelia-http-client\";\n\nexport class List {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/employers\").then(data => {\n            this.employers = JSON.parse(data.response);\n\n            console.log(this.employers);\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { PayScheduleModal } from \"../pay-schedule/pay-schedule-modal\";\nimport { PensionModal } from \"../pension/pension-modal\";\nimport { Confirm } from \"../dialogs/confirm\";\n\n@inject(EventAggregator, DialogService)\nexport class Employer {\n    constructor(eventAggregator, dialogService) {\n        this.employer = null;\n        this.ea = eventAggregator;\n        this.dialogService = dialogService;\n    }\n\n    activate(params) {\n        if (params && params.id) {\n            return this.getEmployerDetails(params.id);\n        }\n    }\n\n    getEmployerDetails(employerId) {\n        return new Promise((resolve) => {\n            let client = new HttpClient();\n\n            client.get(`/api/employer/${employerId}`).then(data => {\n                this.employer = JSON.parse(data.response);\n\n                resolve();\n            });\n        });\n    }\n\n    canAddPayRun(context) {\n        return context.Employees.length > 0 \n            && context.PaySchedules.PaySchedulesTable.PaySchedule\n            && context.PaySchedules.PaySchedulesTable.PaySchedule.length > 0;\n    }\n\n    addAPaySchedule() {\n        this.openPayScheduleModal({});\n    }\n\n    editPaySchedule(schedule) {\n        this.openPayScheduleModal(schedule);\n    }\n\n    deletePaySchedule(schedule) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay schedule?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let client = new HttpClient();\n\n                client.post(`/api/employer/${this.employer.Id}/paySchedule/${schedule.Key}/delete/`).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.apiErrors = null;\n                    this.status = parsedResponse.status;\n                    this.getEmployerDetails(this.employer.Id);\n                });\n            }\n        });        \n    }\n\n    openPayScheduleModal(schedule) {\n        schedule.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PayScheduleModal,\n            model: JSON.parse(JSON.stringify(schedule))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });\n    }\n\n    addAPension() {\n        this.openPensionModal({});\n    }\n\n    editPension(pension) {\n        this.openPensionModal(pension);\n    }\n\n    defaultPensionForAE(employerId, pensionId) {\n        let client = new HttpClient();\n\n        client.patch(`/api/employer/${employerId}/pension/${pensionId}`).then(res => {\n            let parsedResponse = JSON.parse(res.response);\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.apiErrors = null;\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });        \n    }\n\n    deletePension(employerId, pensionId) {\n        let client = new HttpClient();\n\n        client.delete(`/api/employer/${employerId}/pension/${pensionId}`).then(res => {\n            let parsedResponse = JSON.parse(res.response);\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.apiErrors = null;\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });\n    }\n\n    openPensionModal(pension) {\n        pension.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PensionModal,\n            model: JSON.parse(JSON.stringify(pension))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });\n    }\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"employer-form\")\n@inject(EventAggregator)\nexport class EmployerForm {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n    }\n\n    attached() {\n    }\n\n    detached() {\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\n\n@inject(DialogController)\nexport class Confirm {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n    }\n\n    activate(state) {\n        this.state = state;\n    }\n\n    yes() {\n        this.dialogController.ok();\n    }\n\n    no() {\n        this.dialogController.cancel();\n    }\n}",null,"import { PLATFORM } from 'aurelia-pal';\n\nexport class App {\n\tconfigureRouter(config, router) {\n\t\tconfig.title = \"PayRun.io Demo\";\n\n\t\tconfig.map([\n\t\t\t{ \n\t\t\t\troute: \"\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"welcome/welcome\"),\n\t\t\t\ttitle: \"Get started\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"employers\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"employer/list\"),\n\t\t\t\ttitle: \"Employers\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"setup\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"welcome/setup\"),\n\t\t\t\ttitle: \"Setup\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"employer/:id?\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"employer/employer\"),\n\t\t\t\ttitle: \"Employer\" \n\t\t\t}\n\t\t]);\n\n    \tthis.router = router;\n\t}\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"api-calls\")\n@inject(EventAggregator)\nexport class APICalls {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n\n    attached() {\n        this.toggleAPICallsSubscriber = this.ea.subscribe(\"toggleAPICalls\", () => {\n            this.visible = !this.visible;\n        });\n    }\n\n    detached() {\n        this.toggleAPICallsSubscriber.dispose();\n    }\n\n    close() {\n        this.visible = false;\n    }\n}",null],"sourceRoot":"../.."}