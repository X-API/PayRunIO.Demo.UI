{"version":3,"sources":["src/welcome/welcome.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/welcome.html","src/welcome/setup.js","/Users/robertwaggott/Code/Me/payrun-demo/src/welcome/setup.html","src/resources/value-converters/short-date.js","src/resources/value-converters/long-date-time.js","src/resources/value-converters/extract-href.js","src/resources/value-converters/employee-name.js","src/resources/value-converters/bank-account.js","src/resources/value-converters/address.js","src/resources/index.js","src/resources/elements/validation-errors/validation-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/validation-errors/validation-errors.html","src/resources/elements/status/status.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/status/status.html","src/resources/elements/router-progress-indicator/router-progress-indicator.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/router-progress-indicator/router-progress-indicator.html","src/resources/elements/coming-soon/coming-soon.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/coming-soon/coming-soon.html","src/resources/elements/api-errors/api-errors.js","/Users/robertwaggott/Code/Me/payrun-demo/src/resources/elements/api-errors/api-errors.html","src/pension/pension-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pension/pension-modal.html","src/pay-schedule/pay-schedule-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-schedule/pay-schedule-modal.html","src/pay-run/new-pay-run-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-run/new-pay-run-modal.html","src/pay-run/info-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/pay-run/info-modal.html","src/main.js","src/job/job-details-modal.js","/Users/robertwaggott/Code/Me/payrun-demo/src/job/job-details-modal.html","src/header/header.js","/Users/robertwaggott/Code/Me/payrun-demo/src/header/header.html","src/footer/footer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/footer/footer.html","src/environment.js","src/employer/list.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/list.html","src/employer/employer.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer.html","src/employer/employer-form.js","/Users/robertwaggott/Code/Me/payrun-demo/src/employer/employer-form.html","src/dialogs/confirm.js","/Users/robertwaggott/Code/Me/payrun-demo/src/dialogs/confirm.html","src/app.js","/Users/robertwaggott/Code/Me/payrun-demo/src/app.html","src/api-calls/api-calls.js","/Users/robertwaggott/Code/Me/payrun-demo/src/api-calls/api-calls.html"],"names":["Welcome","activate","client","HttpClient","get","then","state","JSON","parse","data","response","deactivate","Setup","ValidationControllerFactory","Router","controllerFactory","router","controller","createForCurrentScope","environments","setupValidationRules","ValidationRules","ensure","required","withMessage","on","save","Environment","ConsumerKey","ConsumerSecret","validate","result","valid","post","navigate","moment","ShortDateValueConverter","toView","value","format","LongDateTimeValueConverter","ExtractHrefValueConverter","obj","EmployeeNameValueConverter","employee","firstname","FirstName","Initials","parts","Title","MiddleName","LastName","filter","part","undefined","trim","length","join","BankAccountValueConverter","account","AccountName","AccountNumber","SortCode","AddressValueConverter","address","Address1","Address2","Address3","Address4","Country","Postcode","configure","config","globalResources","ValidationErrors","bindable","Status","EventAggregator","eventAggregator","ea","viewJob","publish","status","job","RouterProgressIndicator","visible","attached","processingSubscriber","subscribe","NProgress","start","completeSubscriber","done","detached","dispose","ComingSoon","ApiErrors","PensionModal","DialogController","dialogController","validationController","proRataMethods","text","taxationMethods","employerId","parsedResponse","res","errors","apiErrors","ok","PayScheduleModal","frequencies","Id","Key","Name","PayFrequency","NewPayRunModal","PayScheduleId","PaymentDate","StartDate","EndDate","EmployerId","InfoModal","aurelia","use","standardConfiguration","plugin","PLATFORM","moduleName","feature","environment","debug","developmentLogging","testing","setRoot","JobDetailsModal","Header","toggleAPICalls","Footer","List","employers","console","log","Employer","DialogService","dialogService","employer","params","id","getEmployerDetails","Promise","resolve","canAddPayRun","context","Employees","PaySchedules","PaySchedulesTable","PaySchedule","addAPaySchedule","openPayScheduleModal","editPaySchedule","schedule","deletePaySchedule","opts","viewModel","Confirm","model","title","message","open","whenClosed","wasCancelled","stringify","output","addAPension","openPensionModal","editPension","pension","defaultPensionForAE","pensionId","patch","deletePension","delete","openPayRunInfoModal","payScheduleId","payRunId","url","payRun","openRerunPayRunModal","Instruction","PeriodStart","PeriodEnd","deletePayRun","EmployerForm","yes","no","cancel","App","type","configureRouter","map","route","moduleId","APICalls","toggleAPICallsSubscriber","close"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { HttpClient } from \"aurelia-http-client\";\n\nexport class Welcome {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/has-been-setup\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n\n    deactivate() {\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { Router } from \"aurelia-router\";\n\n@inject(ValidationControllerFactory, Router)\nexport class Setup {\n    constructor(controllerFactory, router) {\n        this.controller = controllerFactory.createForCurrentScope();\n        this.router = router;\n        this.client = new HttpClient();\n    }\n\n    activate() {\n        this.client.get(\"/api/setup\").then(data => {\n            this.state = JSON.parse(data.response);\n            this.environments = [\"Test\", \"Production\"];\n\n            this.setupValidationRules();\n        });\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"ConsumerSecret\").required().withMessage(\"Consumer Secret is required\")\n            .ensure(\"ConsumerKey\").required().withMessage(\"Consumer Key is required\")\n            .ensure(\"Environment\").required().withMessage(\"Environment is required\")\n            .on(this.state);\n    }\n\n    save() {\n        let data = {\n            Environment: this.state.Environment,\n            ConsumerKey: this.state.ConsumerKey,\n            ConsumerSecret: this.state.ConsumerSecret\n        };\n\n        this.controller.validate().then(result => {\n            if (result.valid) {\n                this.client.post(\"/api/setup\", data).then(() => {\n                    this.router.navigate(\"employers\");\n                });\n            }\n        });  \n    }    \n}",null,"const moment = require(\"moment\");\n\nexport class ShortDateValueConverter {\n\ttoView(value) {\n\t\tif (value) {\n\t\t\treturn moment(value).format(\"YYYY-MM-DD\");\n\t\t}\n\t\t\n\t\treturn \"\";\n  \t}\n}\n\n","const moment = require(\"moment\");\n\nexport class LongDateTimeValueConverter {\n\ttoView(value) {\n\t\tif (value) {\n\t\t\treturn moment(value).format(\"YYYY-MM-DD HH:mm:ss\");\n\t\t}\n\t\t\n\t\treturn \"\";\n  \t}\n}\n\n","export class ExtractHrefValueConverter {\n\ttoView(obj) {\n\t\treturn obj[\"@href\"];\t\n\t}\n}","export class EmployeeNameValueConverter {\n\ttoView(employee) {\n\t\tlet firstname = employee.FirstName || employee.Initials;\n    \n\t\tlet parts = [\n\t\t\temployee.Title,\n\t\t\tfirstname,\n\t\t\temployee.MiddleName,\n\t\t\temployee.LastName\n\t\t].filter(part => part !== undefined && part !== null && part.trim().length > 0);\n\t\n\t\treturn parts.join(\" \");\t\t\n\t}\n}\n\n","export class BankAccountValueConverter {\n\ttoView(account) {\n\t\tif (account) {\n\t\t\tlet parts = [\n\t\t\t\taccount.AccountName,\n\t\t\t\taccount.AccountNumber,\n\t\t\t\taccount.SortCode\n\t\t\t].filter(part => part !== null && part !== undefined && part.trim().length > 0);\n\t\n\t\t\treturn parts.join(\"<br />\");\n\t\t}\n\t\n\t\treturn \"\";\n\t}\n}","export class AddressValueConverter {\n  \ttoView(address) {\n\t\tif (address) {\n\t\t\tlet parts = [\n\t\t\t\taddress.Address1, \n\t\t\t\taddress.Address2, \n\t\t\t\taddress.Address3, \n\t\t\t\taddress.Address4, \n\t\t\t\taddress.Country, \n\t\t\t\taddress.Postcode\n\t\t\t].filter(part => part !== null && part !== undefined && part.trim().length > 0);\n\t\n\t\t\treturn parts.join(\"<br />\");\n\t\t}\n\t\n\t\treturn \"\";\n  \t}\n}","export function configure(config) {\n\tconfig.globalResources([\n\t\t\"./value-converters/address\",\n\t\t\"./value-converters/bank-account\",\n\t\t\"./value-converters/employee-name\",\n\t\t\"./value-converters/extract-href\",\n\t\t\"./value-converters/long-date-time\",\n\t\t\"./value-converters/short-date\",\n  \t]);\n}\n","import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"validation-errors\")\nexport class ValidationErrors {\n    @bindable errors = null;\n}",null,"import { inject, bindable, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"status\")\n@inject(EventAggregator)\nexport class Status {\n    constructor(eventAggregator) {\n        this.ea = eventAggregator;\n    }\n\n    @bindable status = null;\n\n    viewJob() {\n        this.ea.publish(\"app:view-job\", this.status.job);\n    }\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"router-progress-indicator\")\n@inject(EventAggregator)\nexport class RouterProgressIndicator {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n        \n    attached() {\n        this.processingSubscriber = this.ea.subscribe(\"router:navigation:processing\", () => {\n            NProgress.start();\n        });\n\n        this.completeSubscriber = this.ea.subscribe(\"router:navigation:complete\", () => {\n            NProgress.done();\n        });        \n    }\n\n    detached() {\n        this.processingSubscriber.dispose();\n        this.completeSubscriber.dispose();\n    }\n}",null,"import { customElement } from \"aurelia-framework\";\n\n@customElement(\"coming-soon\")\nexport class ComingSoon {\n}",null,"import { bindable, customElement } from \"aurelia-framework\";\n\n@customElement(\"api-errors\")\nexport class ApiErrors {\n    @bindable errors = null;\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PensionModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        this.proRataMethods = [\n            { value: \"NotSet\", text: \"Not set\" },\n            { value: \"Annual260Days\", text: \"Annual 260 days\" },\n            { value: \"Annual365Days\", text: \"Annual 365 days\" },\n            { value: \"AnnualQualifyingDays\", text: \"Annual qualifying days\" },\n            { value: \"DaysPerCalenderMonth\", text: \"Days per calender month\" },\n            { value: \"DaysPerTaxPeriod\", text: \"Days per tax period\" },\n        ];\n\n        this.taxationMethods = [\n            { value: \"NotSet\", text: \"Not set\" },\n            { value: \"NetBased\", text: \"Net based\" },\n            { value: \"ReliefAtSource\", text: \"Relief at source\" }\n        ];\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"SchemeName\").required().withMessage(\"Scheme name is required\")\n            .ensure(\"ProviderName\").required().withMessage(\"Provider name is required\")\n            .ensure(\"ProviderEmployerRef\").required().withMessage(\"Provider employer ref is required\")\n            .ensure(\"EffectiveDate\").required().withMessage(\"Effective date is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/pension`, this.state).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class PayScheduleModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n        this.frequencies = [\n            { text: \"Weekly\", value: \"Weekly\" },\n            { text: \"Monthly\", value: \"Monthly\" },\n            { text: \"Two weekly\", value: \"TwoWeekly\" },\n            { text: \"Four weekly\", value: \"FourWeekly\" }\n        ];\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"Name\").required().withMessage(\"Name is required\")\n            .ensure(\"PayFrequency\").required().withMessage(\"Pay Frequency is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        let data = {\n            Id: this.state.Key,\n            Name: this.state.Name,\n            PayFrequency: this.state.PayFrequency\n        };\n\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.employerId}/paySchedule`, data).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { ValidationControllerFactory, ValidationRules } from \"aurelia-validation\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(ValidationControllerFactory, DialogController)\nexport class NewPayRunModal {\n    constructor(controllerFactory, dialogController) {\n        this.dialogController = dialogController;\n        this.validationController = controllerFactory.createForCurrentScope();\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n\n        this.setupValidationRules();\n    }\n\n    setupValidationRules() {\n        ValidationRules\n            .ensure(\"PayScheduleId\").required().withMessage(\"Pay Schedule is required\")\n            .ensure(\"PaymentDate\").required().withMessage(\"Payment Date is required\")\n            .ensure(\"StartDate\").required().withMessage(\"Pay Period Start is required\")\n            .ensure(\"EndDate\").required().withMessage(\"Pay Period End is required\")\n            .on(this.state);        \n    }    \n\n    save() {\n        let data = {\n            PayScheduleId: this.state.PayScheduleId,\n            PaymentDate: this.state.PaymentDate,\n            StartDate: this.state.StartDate,\n            EndDate: this.state.EndDate\n        };\n\n        this.validationController.validate().then(result => {\n            if (result.valid) {\n                this.client.post(`/api/employer/${this.state.EmployerId}/payRun`, data).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.dialogController.ok(parsedResponse.status);\n                });\n            }\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\n\n@inject(DialogController)\nexport class InfoModal {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n    }\n\n    activate(state) {\n        this.state = state;\n    }\n}",null,"import { PLATFORM } from \"aurelia-pal\";\nimport environment from './environment';\n\nexport function configure(aurelia) {\n\taurelia.use\n\t\t.standardConfiguration()\n\t\t.plugin(\"aurelia-validation\")\n\t\t.plugin(PLATFORM.moduleName(\"aurelia-dialog\"))\n\t\t.feature(\"resources\");\n\n\tif (environment.debug) {\n\t\taurelia.use.developmentLogging();\n\t}\n\n\tif (environment.testing) {\n\t\taurelia.use.plugin('aurelia-testing');\n\t}\n\n\treturn aurelia.start().then(() => aurelia.setRoot());\n}\n","import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { HttpClient } from \"aurelia-http-client\";\n\n@inject(DialogController)\nexport class JobDetailsModal {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n        this.client = new HttpClient();\n    }\n\n    activate(state) {\n        this.state = state;\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@inject(EventAggregator)\nexport class Header {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n    }\n\n    attached() {\n    }\n\n    toggleAPICalls() {\n        this.ea.publish(\"toggleAPICalls\");\n    }\n}",null,"import { HttpClient } from \"aurelia-http-client\";\n\nexport class Footer {\n    attached() {\n        let client = new HttpClient();\n\n        client.get(\"/api/version\").then(data => {\n            this.state = JSON.parse(data.response);\n        });\n    }\n}",null,"export default {\n  debug: true,\n  testing: true\n};\n","import { HttpClient } from \"aurelia-http-client\";\n\nexport class List {\n    constructor() {\n    }\n\n    activate() {\n        let client = new HttpClient();\n\n        client.get(\"/api/employers\").then(data => {\n            this.employers = JSON.parse(data.response);\n\n            console.log(this.employers);\n        });\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { PayScheduleModal } from \"../pay-schedule/pay-schedule-modal\";\nimport { PensionModal } from \"../pension/pension-modal\";\nimport { InfoModal } from \"../pay-run/info-modal\";\nimport { NewPayRunModal } from \"../pay-run/new-pay-run-modal\";\nimport { Confirm } from \"../dialogs/confirm\";\n\n@inject(EventAggregator, DialogService)\nexport class Employer {\n    constructor(eventAggregator, dialogService) {\n        this.employer = null;\n        this.ea = eventAggregator;\n        this.dialogService = dialogService;\n    }\n\n    activate(params) {\n        if (params && params.id) {\n            return this.getEmployerDetails(params.id);\n        }\n    }\n\n    getEmployerDetails(employerId) {\n        return new Promise((resolve) => {\n            let client = new HttpClient();\n\n            client.get(`/api/employer/${employerId}`).then(data => {\n                this.employer = JSON.parse(data.response);\n\n                resolve();\n            });\n        });\n    }\n\n    canAddPayRun(context) {\n        return context.Employees.length > 0 \n            && context.PaySchedules.PaySchedulesTable.PaySchedule\n            && context.PaySchedules.PaySchedulesTable.PaySchedule.length > 0;\n    }\n\n    addAPaySchedule() {\n        this.openPayScheduleModal({});\n    }\n\n    editPaySchedule(schedule) {\n        this.openPayScheduleModal(schedule);\n    }\n\n    deletePaySchedule(schedule) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay schedule?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let client = new HttpClient();\n\n                client.post(`/api/employer/${this.employer.Id}/paySchedule/${schedule.Key}/delete/`).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n\n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n\n                    this.apiErrors = null;\n                    this.status = parsedResponse.status;\n                    this.getEmployerDetails(this.employer.Id);\n                });\n            }\n        });        \n    }\n\n    openPayScheduleModal(schedule) {\n        schedule.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PayScheduleModal,\n            model: JSON.parse(JSON.stringify(schedule))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });\n    }\n\n    addAPension() {\n        this.openPensionModal({});\n    }\n\n    editPension(pension) {\n        this.openPensionModal(pension);\n    }\n\n    defaultPensionForAE(employerId, pensionId) {\n        let client = new HttpClient();\n\n        client.patch(`/api/employer/${employerId}/pension/${pensionId}`).then(res => {\n            let parsedResponse = JSON.parse(res.response);\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.apiErrors = null;\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });        \n    }\n\n    deletePension(employerId, pensionId) {\n        let client = new HttpClient();\n\n        client.delete(`/api/employer/${employerId}/pension/${pensionId}`).then(res => {\n            let parsedResponse = JSON.parse(res.response);\n\n            if (parsedResponse.errors) {\n                this.apiErrors = parsedResponse.errors;\n                return;\n            }\n\n            this.apiErrors = null;\n            this.status = parsedResponse.status;\n            this.getEmployerDetails(employerId);\n        });\n    }\n\n    openPensionModal(pension) {\n        pension.employerId = this.employer.Id;\n        \n        let opts = {\n            viewModel: PensionModal,\n            model: JSON.parse(JSON.stringify(pension))\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });\n    }\n\n    openPayRunInfoModal(employerId, payScheduleId, payRunId) {\n        let url = `api/employer/${employerId}/paySchedule/${payScheduleId}/payRun/${payRunId}`;\n        let client = new HttpClient();\n\n        client.get(url).then(res => {\n            let payRun = JSON.parse(res.response);\n\n            payRun.EmployerId = this.employer.Id;\n\n            let opts = {\n                viewModel: InfoModal,\n                model: payRun\n            };\n    \n            this.dialogService.open(opts);\n        });\n    }\n\n    openRerunPayRunModal(employerId, payScheduleId, payRun) {\n        let state = {\n            Title: \"Rerun PayRun\",\n            Instruction: \"Re-running will delete the previous run.\",\n            EmployerId: employerId,\n            PayScheduleId: payScheduleId,\n            PaymentDate: payRun.PaymentDate,\n            StartDate: payRun.PeriodStart,\n            EndDate: payRun.PeriodEnd,\n            PaySchedules: []\n        };\n        \n        let opts = {\n            viewModel: NewPayRunModal,\n            model: state\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                this.status = response.output;\n\n                this.getEmployerDetails(this.employer.Id);\n            }\n        });        \n    }\n\n    deletePayRun(employerId, payScheduleId, payRunId) {\n        let opts = {\n            viewModel: Confirm,\n            model: {\n                title: \"Are you sure?\",\n                message: \"Are you sure you want to delete this pay run?\"\n            }\n        };\n\n        this.dialogService.open(opts).whenClosed(response => {\n            if (!response.wasCancelled) {\n                let client = new HttpClient();\n\n                client.delete(`/api/employer/${employerId}/paySchedule/${payScheduleId}/payRun/${payRunId}`).then(res => {\n                    let parsedResponse = JSON.parse(res.response);\n        \n                    if (parsedResponse.errors) {\n                        this.apiErrors = parsedResponse.errors;\n                        return;\n                    }\n        \n                    this.apiErrors = null;\n                    this.status = parsedResponse.status;\n                    this.getEmployerDetails(employerId);\n                });\n            }\n        });\n    }\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"employer-form\")\n@inject(EventAggregator)\nexport class EmployerForm {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n    }\n\n    attached() {\n    }\n\n    detached() {\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\n\n@inject(DialogController)\nexport class Confirm {\n    constructor(dialogController) {\n        this.dialogController = dialogController;\n    }\n\n    activate(state) {\n        this.state = state;\n    }\n\n    yes() {\n        this.dialogController.ok();\n    }\n\n    no() {\n        this.dialogController.cancel();\n    }\n}",null,"import { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { HttpClient } from \"aurelia-http-client\";\nimport { JobDetailsModal } from \"job/job-details-modal\";\nimport { PLATFORM } from \"aurelia-pal\";\n\n@inject(EventAggregator, DialogService)\nexport class App {\n\tconstructor(eventAggregator, dialogService) {\n\t\tthis.ea = eventAggregator;\n\t\tthis.dialogService = dialogService;\n\t}\n\n\tactivate() {\n\t\tthis.ea.subscribe(\"app:view-job\", job => {\n\t\t\tlet client = new HttpClient();\n\n            client.get(`/api/job/${job.id}/${job.type}`).then(data => {\n\t\t\t\tlet job = JSON.parse(data.response);\n\t\t\t\t\n\t\t\t\tlet opts = {\n\t\t\t\t\tviewModel: JobDetailsModal,\n\t\t\t\t\tmodel: job\n\t\t\t\t};\n\t\t\n\t\t\t\tthis.dialogService.open(opts);\t\t\t\t\n            });\t\t\t\n\t\t})\n\t}\n\n\tconfigureRouter(config, router) {\n\t\tconfig.title = \"PayRun.io Demo\";\n\n\t\tconfig.map([\n\t\t\t{ \n\t\t\t\troute: \"\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"welcome/welcome\"),\n\t\t\t\ttitle: \"Get started\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"employers\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"employer/list\"),\n\t\t\t\ttitle: \"Employers\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"setup\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"welcome/setup\"),\n\t\t\t\ttitle: \"Setup\" \n\t\t\t},\n\t\t\t{ \n\t\t\t\troute: \"employer/:id?\",\n\t\t\t\tmoduleId: PLATFORM.moduleName(\"employer/employer\"),\n\t\t\t\ttitle: \"Employer\" \n\t\t\t}\n\t\t]);\n\n    \tthis.router = router;\n\t}\n}",null,"import { inject, customElement } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n\n@customElement(\"api-calls\")\n@inject(EventAggregator)\nexport class APICalls {\n    constructor(EventAggregator) {\n        this.ea = EventAggregator;\n        this.visible = false;\n    }\n\n    attached() {\n        this.toggleAPICallsSubscriber = this.ea.subscribe(\"toggleAPICalls\", () => {\n            this.visible = !this.visible;\n        });\n    }\n\n    detached() {\n        this.toggleAPICallsSubscriber.dispose();\n    }\n\n    close() {\n        this.visible = false;\n    }\n}",null],"sourceRoot":"../.."}